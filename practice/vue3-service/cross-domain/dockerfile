# FROM nginx:1.27-alpine

# # Set working directory
# WORKDIR /usr/src/app

# # Copy package.json and package-lock.json (if exists) to the working directory
# COPY package*.json ./

# # Install project dependencies
# RUN npm install

# # Copy project files to the working directory
# COPY . .

# # Expose the port on which the application runs
# EXPOSE 3000

# # Start the application
# CMD ["npm", "start"]

# 使用 Node.js 镜像作为构建阶段
FROM node:20.13.0 AS build-stage

# Install pnpm
RUN  npm i -g pnpm@^9.0.0

# Set working directory
WORKDIR /app

# Copy package.json and package-lock.json (if exists) to the working directory
COPY package*.json pnpm-lock.yaml ./

# Install project dependencies
RUN pnpm install

# Copy project files to the working directory
COPY . .

# Build and remove devDependencies pacakges
RUN npm run build && rm -rf /app/node_modules

# 使用 Nginx 镜像作为生产阶段
FROM nginx:1.27-alpine AS production-stage

# 复制自定义的 Nginx 配置文件
COPY nginx-conf/nginx.conf   /etc/nginx/nginx.conf
COPY nginx-conf/conf.d/*     /etc/nginx/conf.d/

# 复制构建的文件到 Nginx 的默认静态文件目录
COPY --from=build-stage /app/dist /website

# Expose the port on which the application runs
EXPOSE 5173-5179

# Start the application
CMD ["nginx", "-g", "daemon off;"]
